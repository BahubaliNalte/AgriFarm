<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Products</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="font-sans bg-gray-100 m-0 p-0">
  <!-- Navbar -->
  <div class="flex items-center justify-between bg-gray-800 p-2">
    <h1 class="text-white"><a href="/user">AgriFarm Store</a></h1>
    <button class="bg-red-700 text-white border-none p-2 cursor-pointer transition-colors duration-300 hover:bg-red-600">
      <a href="/auth/logout">Logout</a>
    </button>
  </div>

  <div class="container mx-auto p-5 bg-white shadow-lg rounded-lg">
    <!-- Search Bar -->
    <div class="flex justify-center mb-5">
      <input type="text" id="search" placeholder="Search for products..." class="w-3/4 p-2 border border-gray-300 rounded-lg text-lg" oninput="searchProducts()">
    </div>

    <!-- Product Section -->
    <div class="mb-5 bg-blue-50 p-5 rounded-lg shadow-lg">
      <h2 class="text-center mb-5 text-2xl">Products</h2>
      <div id="products" class="flex flex-wrap gap-5 justify-center">
        <% products.forEach(product => { %>
          <div class="product-item bg-white border border-gray-300 rounded-lg p-5 w-48 text-center shadow-lg transition-transform duration-300 hover:translate-y-1 hover:shadow-xl">
            <img src="<%= product.imageUrl %>" alt="<%= product.name %>" class="w-full rounded-lg">
            <h3 class="text-lg mt-2"><%= product.name %></h3>
            <p class="text-gray-600">Price: ₹<%= product.price %></p>
            <p class="text-gray-600"><%= product.description %></p>
            <button onclick="addToCart('<%= product._id %>', '<%= product.name %>', '<%= product.price %>')" class="mt-2 p-2 bg-blue-600 text-white rounded-lg transition-colors duration-300 hover:bg-blue-500">Add to Cart</button>
          </div>
        <% }) %>
      </div>
    </div>

    <!-- Cart Section -->
    <div class="mb-5 bg-gray-50 p-5 rounded-lg shadow-lg">
      <h2 class="text-center mb-5 text-2xl">Cart</h2>
      <div id="cart" class="flex flex-wrap gap-5 justify-center">
        <!-- Cart items will be rendered here -->
      </div>
      <p class="flex justify-center" id="totalPrice">Total Price: ₹0.00</p>
      <div class="flex justify-center mt-2">
        <button id="buyButton" onclick="openBuyPopup()" class="hidden p-2 bg-blue-600 text-white rounded-lg transition-colors duration-300 hover:bg-blue-500">Buy</button>
      </div>
    </div>

    <!-- Buy Popup -->
    <div id="buyPopup" class="modal fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden">
      <div class="modal-content bg-white p-5 rounded-lg shadow-lg w-3/4">
        <span class="close text-gray-500 float-right text-2xl font-bold cursor-pointer transition-colors duration-300 hover:text-black" onclick="closeBuyPopup()">&times;</span>
        <h2 class="text-center mb-5 text-2xl">Enter Your Details</h2>
        <form id="buyForm" class="flex flex-col items-center">
          <label for="name" class="mb-2">Name:</label>
          <input type="text" id="name" name="name" required class="mb-4 p-2 border border-gray-300 rounded-lg text-lg">
          <label for="address" class="mb-2">Address:</label>
          <input type="text" id="address" name="address" required class="mb-4 p-2 border border-gray-300 rounded-lg text-lg">
          <label for="phone" class="mb-2">Phone Number:</label>
          <input type="text" id="phone" name="phone" required class="mb-4 p-2 border border-gray-300 rounded-lg text-lg">
          <label for="payment" class="mb-2">Payment Method:</label>
          <select id="payment" name="payment" required class="mb-4 p-2 border border-gray-300 rounded-lg text-lg">
            <option value="credit_card">Credit Card</option>
            <option value="debit_card">Debit Card</option>
            <option value="paypal">PayPal</option>
            <option value="cash_on_delivery">Cash on Delivery</option>
          </select>
          <button type="button" onclick="buyNow()" class="p-2 bg-blue-600 text-white rounded-lg transition-colors duration-300 hover:bg-blue-500">Buy Now</button>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      await loadProducts();
      renderCart();
    });

    async function loadProducts() {
      try {
        const response = await fetch('/api/products');
        const products = await response.json();
        const productsDiv = document.getElementById('products');
        productsDiv.innerHTML = '';

        products.forEach(product => {
          const productDiv = document.createElement('div');
          productDiv.className = 'product-item bg-white border border-gray-300 rounded-lg p-5 w-48 text-center shadow-lg transition-transform duration-300 hover:translate-y-1 hover:shadow-xl';
          productDiv.setAttribute('data-name', product.name.toLowerCase());
          productDiv.innerHTML = `
            <img src="${product.imageUrl}" alt="${product.name}" class="w-full rounded-lg">
            <h3 class="text-lg mt-2">${product.name}</h3>
            <p class="text-gray-600">Price: ₹${product.price}</p>
            <p class="text-gray-600">${product.description}</p>
            <button onclick="addToCart('${product._id}', '${product.name}', '${product.price}')" class="mt-2 p-2 bg-blue-600 text-white rounded-lg transition-colors duration-300 hover:bg-blue-500">Add to Cart</button>
          `;
          productsDiv.appendChild(productDiv);
        });
      } catch (error) {
        console.error('Error loading products:', error);
      }
    }

    function searchProducts() {
      const searchQuery = document.getElementById('search').value.toLowerCase();
      const productItems = document.querySelectorAll('.product-item');

      productItems.forEach(item => {
        const productName = item.getAttribute('data-name');
        if (productName.includes(searchQuery)) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
    }

    function addToCart(productId, productName, productPrice) {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      const existingProduct = cart.find(product => product.id === productId);

      if (existingProduct) {
        existingProduct.quantity += 1;
      } else {
        cart.push({ id: productId, name: productName, price: productPrice, quantity: 1 });
      }

      localStorage.setItem('cart', JSON.stringify(cart));
      renderCart();
    }

    function renderCart() {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      const cartDiv = document.getElementById('cart');
      const totalPriceElement = document.getElementById('totalPrice');
      cartDiv.innerHTML = '';
      let totalPrice = 0;

      cart.forEach(product => {
        const cartItemDiv = document.createElement('div');
        cartItemDiv.className = 'cart-item bg-white border border-gray-300 rounded-lg p-5 w-48 text-center shadow-lg transition-transform duration-300 hover:translate-y-1 hover:shadow-xl';
        cartItemDiv.innerHTML = `
          <h3 class="text-lg mt-2">${product.name}</h3>
          <p class="text-gray-600">Price: ₹${product.price}</p>
          <input type="number" value="${product.quantity}" min="1" class="quantity-input p-1 border border-gray-300 rounded-lg w-40" onchange="updateQuantity('${product.id}', this.value)">
          <button onclick="removeFromCart('${product.id}')" class="mt-2 p-2 bg-red-600 text-white rounded-lg transition-colors duration-300 hover:bg-red-500">Remove</button>
        `;
        cartDiv.appendChild(cartItemDiv);
        totalPrice += product.price * product.quantity;
      });

      totalPriceElement.textContent = `Total Price: ₹${totalPrice.toFixed(2)}`;
      document.getElementById('buyButton').classList.toggle('hidden', cart.length === 0);
    }

    function updateQuantity(productId, quantity) {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      const product = cart.find(product => product.id === productId);
      if (product) {
        product.quantity = parseInt(quantity, 10);
        localStorage.setItem('cart', JSON.stringify(cart));
        renderCart();
      }
    }

    function removeFromCart(productId) {
      let cart = JSON.parse(localStorage.getItem('cart')) || [];
      cart = cart.filter(product => product.id !== productId);
      localStorage.setItem('cart', JSON.stringify(cart));
      renderCart();
    }

    function openBuyPopup() {
      document.getElementById('buyPopup').classList.remove('hidden');
    }

    function closeBuyPopup() {
      document.getElementById('buyPopup').classList.add('hidden');
    }

    async function buyNow() {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      const name = document.getElementById('name').value;
      const address = document.getElementById('address').value;
      const phone = document.getElementById('phone').value;
      const payment = document.getElementById('payment').value;

      const order = {
        name,
        address,
        phone,
        payment,
        cart
      };

      try {
        const response = await fetch('/api/orders', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(order)
        });

        if (response.ok) {
          alert('Purchase successful!');
          localStorage.removeItem('cart');
          renderCart();
          closeBuyPopup();
          await loadOrders(); // Load orders to update the store management page
        } else {
          alert('Failed to complete purchase.');
        }
      } catch (error) {
        console.error('Error completing purchase:', error);
      }
    }

    // Initial render of the cart
    renderCart();
  </script>
</body>
</html>