<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Store Management</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 flex justify-center items-center min-h-screen p-5 text-gray-800">
  <div class="container max-w-6xl bg-white p-10 rounded-lg shadow-lg">
    <h1 class="text-center mb-2 text-4xl text-gray-800">Store Management</h1>
      <div class="mb-10">
      <h2 class="mb-5 text-2xl text-gray-800">Add/Edit Product</h2>
      <form id="productForm" enctype="multipart/form-data" class="flex flex-col">
        <input type="hidden" id="productId" name="productId">
        <input type="text" id="productName" name="name" placeholder="Product Name" required class="p-3 mb-4 border border-gray-300 rounded-lg text-lg focus:border-purple-500 focus:ring-2 focus:ring-purple-200 transition-all duration-300">
        <input type="number" id="productPrice" name="price" placeholder="Product Price" required class="p-3 mb-4 border border-gray-300 rounded-lg text-lg focus:border-purple-500 focus:ring-2 focus:ring-purple-200 transition-all duration-300">
        <textarea id="productDescription" name="description" placeholder="Product Maker" required class="p-3 mb-4 border border-gray-300 rounded-lg text-lg focus:border-purple-500 focus:ring-2 focus:ring-purple-200 transition-all duration-300"></textarea>
        <input type="file" id="productImage" name="image" accept="image/*" required class="p-3 mb-4 border border-gray-300 rounded-lg text-lg focus:border-purple-500 focus:ring-2 focus:ring-purple-200 transition-all duration-300">
        <button type="submit" class="p-3 bg-purple-700 text-white text-lg rounded-lg transition-colors duration-300 hover:bg-purple-600">Save Product</button>
      </form>
    </div>
    <div>
      <h2 class="mb-5 text-2xl text-gray-800">Products</h2>
      <table class="w-full border-collapse">
        <thead>
          <tr>
            <th class="p-3 border border-gray-300 bg-gray-100">Name</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Price</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Product Maker</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Image</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Actions</th>
          </tr>
        </thead>
        <tbody id="productTableBody">
          <% products.forEach(product => { %>
            <tr>
              <td><%= product.name %></td>
              <td><%= product.price %></td>
              <td><%= product.description %></td>
              <td><img src="<%= product.imageUrl %>" alt="<%= product.name %>" width="100"></td>
              <td>
                <% if (product.createdBy.toString() === user._id.toString()) { %>
                  <button onclick="editProduct('<%= product._id %>')">Edit</button>
                  <button onclick="deleteProduct('<%= product._id %>')">Delete</button>
                <% } else { %>
                  <span>Not authorized</span>
                <% } %>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
    <div class="mt-10">
      <h2 class="mb-5 text-2xl text-gray-800">Orders</h2>
      <table class="w-full border-collapse">
        <thead>
          <tr>
            <th class="p-3 border border-gray-300 bg-gray-100">Name</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Address</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Phone</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Payment</th>
            <th class="p-3 border border-gray-300 bg-gray-100">Cart</th>
          </tr>
        </thead>
        <tbody id="orderTableBody">
          <!-- Orders will be rendered here -->
        </tbody>
      </table>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      await loadProducts();
      await loadOrders();

      document.getElementById('productForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        const formData = new FormData(this);
        const productId = formData.get('productId');
        const url = productId ? `/api/products/${productId}` : '/api/products';
        const method = productId ? 'PUT' : 'POST';

        try {
          const response = await fetch(url, {
            method: method,
            body: formData
          });

          if (response.ok) {
            await loadProducts();
            this.reset();
          } else {
            alert('Failed to save product.');
          }
        } catch (error) {
          console.error('Error saving product:', error);
          
        }
      });
    });

    async function loadProducts() {
      try {
        const response = await fetch('/api/products');
        const products = await response.json();
        const productTableBody = document.getElementById('productTableBody');
        productTableBody.innerHTML = '';

        products.forEach(product => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${product.name}</td>
            <td>${product.price}</td>
            <td>${product.description}</td>
            <td><img src="${product.imageUrl}" alt="${product.name}" width="100"></td>
            <td>
              <button onclick="editProduct('${product._id}')">Edit</button>
              <button onclick="deleteProduct('${product._id}')">Delete</button>
            </td>
          `;
          productTableBody.appendChild(row);
        });
      } catch (error) {
        console.error('Error loading products:', error);
      }
    }

    async function loadOrders() {
      try {
        const response = await fetch('/api/orders');
        const orders = await response.json();
        const orderTableBody = document.getElementById('orderTableBody');
        orderTableBody.innerHTML = '';

        orders.forEach(order => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${order.name}</td>
            <td>${order.address}</td>
            <td>${order.phone}</td>
            <td>${order.payment}</td>
            <td>${order.cart.map(item => `Product ID: ${item.id}, Quantity: ${item.quantity}`).join('<br>')}</td>
          `;
          orderTableBody.appendChild(row);
        });
      } catch (error) {
        console.error('Error loading orders:', error);
      }
    }

    async function editProduct(productId) {
      try {
        const response = await fetch(`/api/products/${productId}`);
        const product = await response.json();
        document.getElementById('productId').value = product._id;
        document.getElementById('productName').value = product.name;
        document.getElementById('productPrice').value = product.price;
        document.getElementById('productDescription').value = product.description;
        // Handle image editing if needed
      } catch (error) {
        console.error('Error editing product:', error);
      }
    }

    async function deleteProduct(productId) {
      try {
        const response = await fetch(`/api/products/${productId}`, {
          method: 'DELETE'
        });

        if (response.ok) {
          await loadProducts();
        } else {
          alert('Failed to delete product.');
        }
      } catch (error) {
        console.error('Error deleting product:', error);
      
      }
    }
  </script>
</body>
</html>